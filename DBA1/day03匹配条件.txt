#!/bin/bash

#匹配条件
	--基本匹配条件
	--高级匹配条件
	--操作查询结果
基本匹配条件 高级匹配条件应用于select\update\delete操作

#基本匹配条件
	--数值比较 > >= < <= = !=
	--字符比较/匹配空/非空 = !=  is noll is not null
	--逻辑比较 and or ! ()
	--范围内匹配/去重显示 in()  not in()  between 数字 and 数字 distinct
  数值比较：
      只段类型必须是数值类型
	类型		用途
	=		等于
	>、>=		大于、大于等于
	<、<=		小于、小于等于
	!=		不等于
例：
mysql> select name from user where gid=7;
mysql> select name,uid,gid from user where gid=7;
mysql> select name,uid,gid from user where uid=gid;
mysql> select name,uid,gid from user where 1=2;
mysql> select name,uid,gid from user where 1=2;
mysql> select name,uid,gid from user where id<=10;

  字符比较/匹配空/非空：
    字符比较时，字段类型必须是字符类型
	类型		用途
	=		相等
	!=		不相等
	IS NULL		匹配空
	IS NOT NULL	非空
例：
mysql> select name from user where shell="/bin/bash";
mysql> select name from user where shell!="/bin/bash";
mysql> select name from user where shell is null;
mysql> select name from user where shell is not null;

  逻辑匹配
      多个判断条件时使用
	类型		用途
	OR		逻辑或
	AND		逻辑与
	!		逻辑非
	()		提高优先级
mysql> select name,uid,shell from user where name="haxi" or uid=0 or shell="/bin/bash";
mysql> select name,uid,shell from user where name="haxi" and uid=0 and shell="/bin/bash";
mysql> select name from user where shell!="/bin/bash";

  范围内匹配/去重显示
      匹配范围内的任意一个值即可
	类型			用途
	in (值列表)		在...里...
	not in (值列表)		不在...里...
	between 数字1 and 数字2	在...之间...
	distinct 字段名		去重显示
例：
mysql> select name,uid,gid from user where gid  in (10,20,30,40);
mysql> select name,uid,gid from user where name  in ("root","mysql","lp");
mysql> select name,uid,gid from user where gid not in (10,20,30,40);
mysql> select name,uid,gid from user where gid  between 10 and 100;
mysql> select distinct shell from user;
mysql> select distinct shell from user where gid<=100;

#高级匹配条件
  模糊查询
      基本用法
	--where 字段名 like '通配符'
	--"_"匹配单个字符，"%"匹配0～N个字符

例：
mysql> select name from user where name like '____';
mysql> select name from user where name like '%a%';
mysql> select name from user where name like '%____%';

  正则表达式
      基本用法
	--where 字段名 regexp '正则表达式'
	--正则元字符'  ^  $  .  []  *  |  '

例：
mysql> insert into user(name) values("7bob"),("lily6"),("jer2ry");
mysql> select name from user where name regexp '[0-9]';
mysql> select name from user where name regexp '^[0-9]';
mysql> select name from user where name regexp '[0-9]$';
mysql> select name,uid from user where uid regexp '....';
mysql> select name,gid from user where gid regexp '^....$';

  四则运算
      运算操作：字段必须是数值类型
	类型		用途
	+		加法
	-		减法
	*		乘法
	/		除法
	%		取余数（求模）

例：
mysql> alter table user add age tinyint(2) default 18 after name;
mysql> select name,age,2018-age syear from user;
mysql> select name,age,2018-age syear from user where name="root";
mysql> select name,uid from user where uid%2=0;
mysql> select name,uid,gid,(uid+gid)/2 pjz from user where name="root";
mysql> update user set age=age+1;
mysql> select name,age from user;
mysql> update user set age=age+1 where name="root";
mysql> select name,age from user;

#操作结果查询
  聚集函数
      mysql内置数据统计函数
	--avg(字段名)	#统计字段平均值
	--sum(字段名)	#统计字段之和
	--min(字段名)	#统计字段最小值
	--max(字段名)	#统计字段最大值
	--count(字段名)	#统计字段值个数 

例：
mysql> select count(name) from user;
mysql> select count(name) from user where shell="/bin/bash";
mysql> select avg(uid) from user;
mysql> select max(uid) from user;
mysql> select min(uid) from user;
mysql> select sum(uid) from user;

  查询结果排序
      基本用法
	--SQL查询 order by 字段名 [asc|desc];	#通常是数值类型的字段，asc升序从小到大(默认)，desc降序从大到小

例：
mysql> select name,uid from user where uid between 10 and 600;
mysql> select name,uid from user where uid between 10 and 600 order by uid;
mysql> select name,uid from user where uid between 10 and 600 order by uid desc;

  查询结果分组
      基本用法
	--SQL查询 group by 字段名;	#通常是字符类型字段

例：
mysql> select shell from user group by shell;
mysql> select shell,count(*) from user group by shell;
mysql> select shell from user where uid<=500 group by shell;

  查询结果过滤
      基本用法
	--SQL查询 having 条件表达式；
	--SQL查询 where 条件 having 条件表达式；
	--SQL查询 group by 字段名 having 条件表达式；

例：
mysql> select name from user having name="adm";
mysql> select name from user where uid<=200 having name="root";
mysql> select shell from user group by shell having shell="/sbin/nologin";

  限制查询结果显示行数
      基本用法
	--SQL查询 limit N；		#显示查询结果前N条记录
	--SQL查询 limit N,M；		#显示指定范围内的查询记录，从N+1行开始，显示M行
        --SQL查询 where 条件 limit N； 
        --SQL查询 group by 字段名 3,3；	#从第4行开始，共显示3行

例：
mysql> select * from user limit 3;
mysql> select * from user limit 3,4;
mysql> select name,uid from user where uid<=200 limit 2;
mysql> select name,uid from user where uid<=200 order by uid desc limit 2;




