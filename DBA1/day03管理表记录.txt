#!/bin/bash

#管理表记录
  为了方便管理，为user表添加ID列
mysql> alter table user add id int(2) primary key auto_increment first;
mysql> desc user;
+----------+-----------+------+-----+---------+----------------+
| Field    | Type      | Null | Key | Default | Extra          |
+----------+-----------+------+-----+---------+----------------+
| id       | int(2)    | NO   | PRI | NULL    | auto_increment |
| name     | char(30)  | YES  | MUL | NULL    |                |
| password | char(1)   | YES  |     | NULL    |                |
| uid      | int(2)    | YES  |     | NULL    |                |
| gid      | int(2)    | YES  |     | NULL    |                |
| comment  | char(150) | YES  |     | NULL    |                |
| homedir  | char(150) | YES  |     | NULL    |                |
| shell    | char(30)  | YES  |     | NULL    |                |
+----------+-----------+------+-----+---------+----------------+

#增加表记录
  语法格式：
      格式1：添加1条记录，给所有字段赋值
	--insert into 表名 values(字段值列表);    #有几个字段必须给几个值，而且字段必须匹配
      格式2：添加N条记录，给所有字段赋值
	--insert into 表名 values(字段值列表1)，(字段值列表2)，(字段值列表3)。。。;	#注意设置主键的值不能重复
      格式3：添加1条记录，给指定字段赋值
	--insert into 表名(字段名列表) values(字段值列表);
      格式4：添加N条记录，给指定字段赋值
        --insert into 表名(字段名列表) values(字段值列表1)，(字段值列表2)，(字段值列表3)。。。;
  注意事项
	--字段值要与字段类型相匹配
	--对于字符类型的字段，要用双引或单引括起来
	--依次给所有字段赋值时，字段名可以省略
	--只给一部分字段赋值时，必须明确写出对应的字段名称

#查询表记录
  语法格式：
      格式1：
	--select 字段1,字段2,。。。。 from 表名;
      格式2：
        --select 字段1,字段2,。。。。 from 表名 where 条件表达式;
  注意事项
	--使用*可以匹配所有字段
	--指定表名时，可采用 库名.表名 的形式

#更新表记录
  语法格式：
      格式1：更新表内的所有记录
	--update  表名 set 字段1=字段1值，字段2=字段2值,。。。。;	#不加条件时为批量修改
      格式2：只更新符合条件的部分记录
        --update  表名 set 字段1=字段1值，字段2=字段2值,。。。。 where 条件表达式;       #加条件时为指定修改
  注意事项：
	--字段值要与字段类型相匹配
	--对于字符类型的字段，要用双或单引号括起来
	--若不使用where限定条件，会更新所有记录
	--限定条件时，只更新匹配条件的记录

#删除表记录
  语法格式：
      格式1：仅删除符合条件的记录
	--delete from 表名 where 条件表达式;
      格式2：删除所有的表记录
        --delete from 表名;
例：
mysql> delete from user where id > 40;











































